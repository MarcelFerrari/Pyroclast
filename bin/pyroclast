#!/usr/bin/env python3
import os
import sys
import argparse

if __name__ == '__main__':
    # Find Pyroclast's location and its prefix
    bin = os.path.realpath(os.path.expanduser(__file__))
    prefix = os.path.dirname(os.path.dirname(bin))

    # Allow Pyroclast libs to be imported in our scripts
    lib_path = os.path.join(prefix, "src")
    sys.path.insert(0, lib_path)

    # Import modules
    from Pyroclast.main import Pyroclast

    # Main parser
    parser = argparse.ArgumentParser(description='Run 3D MIC simulation with Pyroclast')

    # Add arguments
    parser.add_argument("--input", "-i", type=str, default = "input.toml", help="Input file with simulation parameters in TOML format (default: input.toml)")
    parser.add_argument("--checkpoint_file", "-c", type=str, help="Checkpoint file to save/load simulation state (default: checkpoint.pkl)")
    parser.add_argument("--threading_layer", "-t", type=str, default = "omp", choices=["omp", "tbb", "workqueue"], help="Threading layer to use (default: omp)")
    parser.add_argument("--num_threads", "-nt", type=int, default = 0, help="Number of threads to use (default: 0 = all available)")

    # Parse arguments
    args = parser.parse_args()
    
    # Convert to a dictionary and strip None values
    args = {k: v for k, v in vars(args).items() if v is not None}
    solver = Pyroclast(args)
    solver.solve()
